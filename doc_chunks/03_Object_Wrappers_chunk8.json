{
  "content": "### 5. PropertyWrapper\n\nWraps Java Bean properties for uniform access:\n\n```java\nclass PropertyWrapper implements ObjectWrapper {\n  private Object bean;\n  private PropertyDescriptor descriptor;\n  \n  PropertyWrapper(Object bean, PropertyDescriptor descriptor) {\n    this.bean = bean;\n    this.descriptor = descriptor;\n  }\n  \n  boolean isPresent() {\n    return bean != null && descriptor != null && descriptor.getReadMethod() != null;\n  }\n  \n  Object unwrap() {\n    if (!isPresent()) return null;\n    try {\n      Method readMethod = descriptor.getReadMethod();\n      return readMethod.invoke(bean);\n    } catch (Exception e) {\n      return null;\n    }\n  }\n  \n  // Other implementation methods\n  // ...\n}\n```\n\n### 6. Function Implementations\n\nSome wrapper implementations are used specifically for function evaluation:",
  "metadata": {
    "source": "docs/md/03_Object_Wrappers.md",
    "relative_path": "docs/md/03_Object_Wrappers.md",
    "filename": "03_Object_Wrappers.md",
    "filetype": "md",
    "chunk_index": 7,
    "total_chunks": 24
  }
}